#BlueJ class context
comment0.target=Curso
comment1.params=p_nombre
comment1.target=Curso(java.lang.String)
comment1.text=Constructor\ Curso\:\ inicializa\ el\ atributo\ (String\ nombre)
comment10.params=p_lu
comment10.target=boolean\ estaInscripto(int)
comment10.text=Verifica\ que\ el\ elemento\ con\ dicha\ clave\ (int)\ recibida\ como\ parametro\ se\ encuentre\ en\ la\ coleccion,\ devuelve\ el\ valor\ (boolean)\ de\ la\ operacion,\ metodo\ de\ acceso\ publico
comment11.params=p_alumno
comment11.target=boolean\ estaInscripto(Alumno)
comment11.text=Verifica\ que\ el\ elemento\ (objeto\ de\ tipo\ Alumno)\ recibido\ como\ parametro\ se\ encuentre\ en\ la\ coleccion,\ devuelve\ el\ valor\ (boolean)\ de\ la\ operacion,\ metodo\ de\ acceso\ publico
comment12.params=p_lu
comment12.target=Alumno\ buscarAlumno(int)
comment12.text=Busca\ en\ la\ coleccion\ el\ elemento\ (objeto\ de\ tipo\ Alumno)\ con\ dicha\ clave\ (valor\ de\ tipo\ int)\ recibida\ como\ parametro,\ y\ devuelve\ dicho\ elemento,\ el\ metodo\ es\ de\ accaso\ publico
comment13.params=p_lu
comment13.target=void\ imprimirPromedioDelAlumno(int)
comment13.text=Imprime\ el\ promedio\ del\ alumno\ asociado\ a\ la\ clave\ (dato\ de\ tipo\ int)\ que\ recibe\ como\ parametro,\ devuelve\ void,\ metodo\ de\ acceso\ publico
comment14.params=
comment14.target=void\ mostrarInscriptos()
comment14.text=Muestra\ la\ cantidad\ de\ inscriptos\ al\ curso\ y\ el\ nombre\ y\ apellido\ de\ dichos\ inscriptos,\ retorna\ void,\ no\ recibe\ parametros,\ es\ un\ metodo\ de\ acceso\ publico
comment15.params=p_lu
comment15.target=void\ mostrarInscripto(int)
comment15.text=Muestra\ los\ datos\ del\ alumno\ con\ dicha\ clave\ (dato\ int)\ que\ recibe\ como\ parametro,\ si\ se\ encuentra\ y\ si\ no,\ emite\ un\ mensaje\ informando\ lo\ contrario,\ metodo\ de\ acceso\ publico,\ retorna\ void
comment16.params=p_lu
comment16.target=void\ agregarNota(int)
comment16.text=Agrega\ notas\ a\ un\ alumno\ con\ dicha\ clave\ (dato\ int)\ recibida\ como\ parametro,\ si\ el\ alumno\ se\ encuentra\ y\ si\ no,\ emite\ un\ mensaje\ informando\ que\ no\ se\ encuentra\ el\ alumno,\ metodo\ de\ acceso\ publico,\ retorina\ void
comment2.params=p_nombre\ p_alumnos
comment2.target=Curso(java.lang.String,\ java.util.HashMap)
comment2.text=Constructor\ Curso\:\ inicializa\ los\ atributos\ (String\ nombre,\ HashMap\ alumnos)
comment3.params=p_nombre
comment3.target=void\ setNombre(java.lang.String)
comment3.text=Metodo\ Setter\ para\ el\ atributo\ "nombre",\ al\ cual\ carga\ con\ el\ valor\ de\ tipo\ String\ que\ recibe\ como\ parametro,\ devuelve\ void*
comment4.params=p_alumnos
comment4.target=void\ setAlumnos(java.util.HashMap)
comment4.text=Metodo\ Setter\ para\ el\ atributo\ "nombre",\ al\ cual\ carga\ con\ el\ valor\ de\ tipo\ String\ que\ recibe\ como\ parametro,\ devuelve\ void*
comment5.params=
comment5.target=java.lang.String\ getNombre()
comment5.text=Metodo\ Getter\ para\ atributo\ "nombre",\ acceso\ publico,\ devuelve\ dato\ de\ tipo\ String
comment6.params=
comment6.target=java.util.HashMap\ getAlumnos()
comment6.text=Metodo\ Getter\ para\ atributo\ "alumnos",\ acceso\ publico,\ devuelve\ una\ coleccion\ de\ tipo\ HashMap
comment7.params=p_alumno
comment7.target=void\ inscribirAlumno(Alumno)
comment7.text=Agrega\ un\ objeto\ de\ tipo\ Alumno\ a\ la\ coleccion,\ el\ cual\ recibe\ como\ parametro,\ retorna\ void,\ el\ metodo\ es\ de\ acceso\ publico
comment8.params=p_lu
comment8.target=Alumno\ quitarAlumno(int)
comment8.text=Elimina\ un\ objeto\ de\ tipo\ Alumno\ de\ la\ coleccion,\ el\ cual\ recibe\ como\ parametro,\ retorna\ el\ objeto\ eliminado,\ el\ metodo\ es\ de\ acceso\ publico
comment9.params=
comment9.target=int\ cantidadDeAlumnos()
comment9.text=Retorna\ la\ cantidad\ (int)\ de\ alumnos\ que\ tiene\ la\ coleccion,\ es\ de\ acceso\ publico\ y\ no\ recibe\ parametros
numComments=17
