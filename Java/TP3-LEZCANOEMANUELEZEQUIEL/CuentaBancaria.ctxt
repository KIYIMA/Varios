#BlueJ class context
comment0.target=CuentaBancaria
comment0.text=\r\n\ Un\ banco\ necesita\ modelar\ el\ concepto\ de\ cuenta\ bancaria,\ que\ debe\ \r\n\ \ permitir\ dep\u00F3sitos\ y\ retiros.\ El\ m\u00E9todo\r\n\ \ \ \ depositar\ (p_importe)\ aumenta\ el\ saldo\ actual\ con\ el\ monto\ pasado\ \r\n\ \ \ \ como\ par\u00E1metro.\ El\ m\u00E9todo\ extraer\ (p_importe)\ disminuye\ el\ saldo\ \r\n\ \ \ \ actual.\ Ambos\ m\u00E9todos\ devuelven\ el\ saldo\ resultante\ despu\u00E9s\ de\ la\r\n\ \ \ \ operaci\u00F3n.\ El\ modelo\ est\u00E1\ representado\ en\ el\ siguiente\ diagrama\ de\ clases.\r\n\ \r\n\ \ La\ pantalla\ de\ salida\ del\ m\u00E9todo\r\n\ \ \ \ mostrar\ ()\ debe\ ser\ el\ siguiente\ (\r\n\ \ \ \ Los\ valores\ en\ negrita\ dependen\ de\ los\ valores\ internos.\r\n\ \ \ \ estado\ del\ objeto)\:\r\n\ \ \ \ \r\n\ \ \ \ El\ m\u00E9todo\ toString\ (),\ devuelve\ una\ cadena,\ compuesta\ por\ la\ concatenaci\u00F3n\ de\ los\ datos\ (n\u00FAmero,\ titular,\ saldo),\ tabulados.\r\n\r\n\ @author\ (your\ name)\ \r\n\ @version\ (a\ version\ number\ or\ a\ date)\r\n
comment1.params=p_nroCuenta\ p_titular
comment1.target=CuentaBancaria(int,\ Persona)
comment10.params=p_importe
comment10.target=double\ extraer(double)
comment11.params=
comment11.target=void\ mostrar()
comment12.params=
comment12.target=void\ mosA\u00F1os()
comment13.params=
comment13.target=java.lang.String\ toStrinf()
comment2.params=p_nroCuenta\ p_titular\ p_saldo
comment2.target=CuentaBancaria(int,\ Persona,\ double)
comment3.params=p_titular
comment3.target=void\ setTitular(Persona)
comment4.params=
comment4.target=Persona\ getTitular()
comment5.params=p_nroCuenta
comment5.target=void\ setNroCuenta(int)
comment6.params=p_saldo
comment6.target=void\ setSaldo(double)
comment7.params=
comment7.target=int\ getNroCuenta()
comment8.params=
comment8.target=double\ getSaldo()
comment9.params=p_importe
comment9.target=double\ depositar(double)
numComments=14
